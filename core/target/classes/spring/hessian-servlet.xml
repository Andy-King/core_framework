<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
	 http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd
	  http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-2.5.xsd 
	  http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd
	  http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd"
	default-autowire="byName"  default-lazy-init="true">
	
	<!-- 使用HessianServiceExporter 将普通bean导出成Hessian服务-->
	<bean name="/HessianRemoting" class="org.springframework.remoting.caucho.HessianServiceExporter">
		<!-- 需要导出的目标bean-->
		<property name="service" ref="cardErpService"/>
		<!-- Hessian服务的接口-->
		<property name="serviceInterface" value="com.lafaso.service.CardErpService"/>
	</bean>  
	<bean name="/HessianRemotingWeb" class="org.springframework.remoting.caucho.HessianServiceExporter">
		<!-- 需要导出的目标bean-->
		<property name="service" ref="cardWebService"/>
		<!-- Hessian服务的接口-->
		<property name="serviceInterface" value="com.lafaso.service.CardWebService"/>
	</bean>
	<bean name="/HessianRemotingPay" class="org.springframework.remoting.caucho.HessianServiceExporter">
		<!-- 需要导出的目标bean-->
		<property name="service" ref="cardPaymentService"/>
		<!-- Hessian服务的接口-->
		<property name="serviceInterface" value="com.lafaso.service.CardPaymentService"/>
	</bean>
	    <!-- passport-hessian 用户服务 start -->
    <bean name="webdbService" class="org.springframework.remoting.caucho.HessianProxyFactoryBean">
        <property name="overloadEnabled" value="true"/>
        <property name="serviceInterface" value="com.tvj.portal.Interface.hessianproxy.WebdbService"/>
        <!-- online 
        <property name="serviceUrl" value="http://192.168.50.69/remoting/HessianRemoting"/>
        -->
        <property name="serviceUrl" value="http://10.1.100.136:8080/remoting/HessianRemoting"/>
        <property name="hessian2Reply" value="false"/>
    </bean>   
   
    <bean name="webdbCardService" class="org.springframework.remoting.caucho.HessianProxyFactoryBean">
        <property name="overloadEnabled" value="true" />
        <property name="serviceInterface" value="com.tvj.portal.Interface.hessianproxy.CardService"/>
        <!-- online 
        <property name="serviceUrl" value="http://192.168.50.69:8080/remoting/CardRemoting"/>
        -->
        <property name="serviceUrl" value="http://10.1.100.124:8080/remoting/CardRemoting"/>
        <property name="hessian2Reply" value="false"/>
    </bean>   
    <!-- passport-hessian 用户服务 end -->
    
    <bean name="hessianRemotingWeb" class="org.springframework.remoting.caucho.HessianProxyFactoryBean">
        <property name="overloadEnabled" value="true" />
        <property name="serviceInterface" value="com.lafaso.service.CardWebService"/>
        <!-- online 
        <property name="serviceUrl" value="http://192.168.50.11/remoting/HessianRemoting"/>
         -->
        <property name="serviceUrl" value="http://192.168.15.203:8080/api/remoting/HessianRemotingWeb"/>
        <property name="hessian2Reply" value="false"/>
    </bean> 
	<bean id="cardWebServiceClient" class="org.springframework.remoting.caucho.HessianProxyFactoryBean"> 
		<property name="serviceUrl"> 
		  <value>http://192.168.15.203:8080/api/remoting/HessianRemotingWeb</value> 
		  <!--
		  <value>http://10.1.100.132:8080/api/remoting/HessianRemotingWeb</value> 
		  -->
		</property> 
		<property name="serviceInterface">
		<value>com.lafaso.service.CardWebService</value> 
		</property>
	</bean>
</beans>
