<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:context="http://www.springframework.org/schema/context" xmlns:aop="http://www.springframework.org/schema/aop"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
     http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd
      http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-2.5.xsd 
      http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd
      http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd"
    default-autowire="byName"  default-lazy-init="true">

	<description>数据源配置文件 </description>

	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
    	<property name="driverClass" value="${jdbc.driverClassName}" />
        <property name="jdbcUrl" value="${jdbc.url}" />
            <property name="user" value="${jdbc.username}" />
            <property name="password" value="${jdbc.password}" />
            <property name="maxPoolSize" value="30" />
            <property name="minPoolSize" value="5" />
            <property name="maxIdleTime" value="60" />
            <property name="maxStatements" value="60" />
            <property name="idleConnectionTestPeriod" value="1800" />
            <property name="acquireIncrement" value="2" />
            <property name="preferredTestQuery" value="select 1 from dual" />
            <property name="numHelperThreads" value="10"/>
    </bean>
    
    <!-- jdbcTemplate config start -->
	<bean id="cardJdbcTemplate"  class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource"><ref bean="dataSource"/></property>
    </bean>
    <!-- jdbcTemplate config end -->

    <bean id="cardDao" abstract="true">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>
    
	<bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
    	<property name="dataSource" ref="dataSource" />
        
        <property name="namingStrategy">
        	<bean class="com.lafaso.util.LocalNamingStrategy">
            	<property name="addUnderScores" value="true" />
            </bean>
		</property>
		
        <property name="packagesToScan" value="com.lafaso.bean"/>
        
        <property name="hibernateProperties">
        	<props>
            	<prop key="hibernate.dialect">${hibernate.dialect}</prop>
                <prop key="hibernate.fetch_size">${hibernate.fetch_size}</prop>
                <prop key="hibernate.batch_size">${hibernate.fetch_size}</prop>
                <prop key="hibernate.jdbc.fetch_size">${hibernate.fetch_size}</prop>
                <prop key="hibernate.jdbc.batch_size">${hibernate.batch_size}</prop>
                <prop key="hibernate.jdbc.use_scrollable_resultset">${hibernate.jdbc.use_scrollable_resultset}</prop>
                <prop key="hibernate.bytecode.use_reflection_optimizer">${hibernate.bytecode.use_reflection_optimizer}</prop>
                <prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
                <prop key="hibernate.cache.use_query_cache">${hibernate.cache.use_query_cache}</prop>
                <prop key="hibernate.cache.provider_class">${hibernate.cache.provider_class}</prop>
                <prop key="hibernate.cache.use_second_level_cache">${hibernate.cache.use_second_level_cache}</prop>
                <prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
                <prop key="hibernate.use_sql_comments">${hibernate.use_sql_comments}</prop>
                <prop key="hibernate.memcached.servers">${hibernate.memcached.servers}</prop>
            </props>
        </property>
        
    </bean>
    
    <!-- 事务管理器配置 -->
    <bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"></property>
    </bean>    
        
        
    <!-- 配置事务的传播特性 -->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="get*" read-only="true"/>
            <tx:method name="find*" read-only="true"/>
            <tx:method name="query*" read-only="true"/>
            <tx:method name="handle*"/>
            <tx:method name="*" propagation="REQUIRED" />
        </tx:attributes>
    </tx:advice>
    
    <!-- 配置事务的切入点 
    <aop:config proxy-target-class="true">
    -->
    <aop:config>
        <aop:pointcut id="targetMethod" 
        expression="execution(* com.lafaso.service..*.*(..))" />
        <aop:advisor advice-ref="txAdvice" pointcut-ref="targetMethod" />
    </aop:config>

</beans>
